% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_timedata_sequence.R
\name{generate_timedata_sequence}
\alias{generate_timedata_sequence}
\title{Generate a sequence of time points in a semi-deterministic way}
\usage{
generate_timedata_sequence(
  intercept = 0,
  slope = 1,
  curvature = 0,
  noise = 2,
  noise_ratio = c(0.5, 0.1, 0.02),
  from = 0,
  to = 10
)
}
\arguments{
\item{intercept}{default value of attitude at t = 0}

\item{slope}{default 1st order regression coefficient}

\item{curvature}{default 2nd order regression coefficient}

\item{noise}{default SD of noise added to attitude at each timepoint}

\item{noise_ratio}{relative strengths of noise applied to initial intercept, slope and curvature BEFORE other factors}

\item{from}{first time point}

\item{to}{last time point}
}
\value{
A tibble of sequence data in long format
}
\description{
This function should usually be \strong{called internally}. This function generates a sequence of values (scores) using a defined quadratic function. Random, normal noise is added to each of the coefficients according to the value of noise and noise_ratio. Additional time dependent noise is added to each value
}
\details{
The default model has the following properties with respect to time:
\itemize{
\item Data have an initial intercept of 0
\item Data develop at 1.0 point per time period
\item No curvature is expected.
\item Default noise is drawn randomly from a normal distribution of mean=0 and sd=2 and applied at EVERY time point separately. This models those random factors that vary over time.
\item Further default noise is applied to the participant's individual initial intercept, slope and curvature to model those factors that vary per participant. By default these are drawn randomly from normal distributions with mean=0 and sd=1.00 (intercept: 2 × 0.5), sd=0.20 (slope: 2 × 0.1), sd=0.04 (curvature: 2 × 0.02)
}

Returns a tibble in the form:\tabular{ll}{
   timepoint \tab attitude \cr
   1 \tab 0.234534 \cr
}
}
\examples{
generate_timedata_sequence()

}
